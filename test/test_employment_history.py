# coding: utf-8

"""
    My API

    Description of my API

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.employment_history import EmploymentHistory

class TestEmploymentHistory(unittest.TestCase):
    """EmploymentHistory unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EmploymentHistory:
        """Test EmploymentHistory
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EmploymentHistory`
        """
        model = EmploymentHistory()
        if include_optional:
            return EmploymentHistory(
                id = 56,
                role = '',
                department = '',
                process = [
                    openapi_client.models.process.Process(
                        id = 56, 
                        name = '', 
                        description = '', 
                        hazards = [
                            openapi_client.models.observation_type.ObservationType(
                                id = 56, 
                                sections = [
                                    openapi_client.models.section.Section(
                                        id = 56, 
                                        name = '', 
                                        code = '', 
                                        description = '', 
                                        section_type = openapi_client.models.section_type.SectionType(
                                            id = 56, 
                                            name = '', 
                                            code = '', 
                                            description = '', ), )
                                    ], 
                                name = '', 
                                description = '', 
                                code = '', 
                                required = True, 
                                schema = null, 
                                value_type = null, 
                                category = null, 
                                unit = '', 
                                hint = '', 
                                examination_types = [
                                    openapi_client.models.examination_type.ExaminationType(
                                        id = 56, 
                                        name = '', 
                                        parent = '', 
                                        description = '', 
                                        code = '', )
                                    ], )
                            ], 
                        hazard_ids = [
                            56
                            ], 
                        organization = 56, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                process_ids = [
                    56
                    ],
                branch_id = 56,
                branch = openapi_client.models.branch.Branch(
                    id = 56, 
                    name = '', 
                    description = '', 
                    address = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    organization = 56, ),
                title = '',
                title_position = '',
                organization_name = '',
                organization_address = '',
                assigned_task = '',
                employment_date_from = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                employment_date_to = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                reason_for_job_change = '',
                current = True,
                current_organization = True,
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                person = 56
            )
        else:
            return EmploymentHistory(
                id = 56,
                process = [
                    openapi_client.models.process.Process(
                        id = 56, 
                        name = '', 
                        description = '', 
                        hazards = [
                            openapi_client.models.observation_type.ObservationType(
                                id = 56, 
                                sections = [
                                    openapi_client.models.section.Section(
                                        id = 56, 
                                        name = '', 
                                        code = '', 
                                        description = '', 
                                        section_type = openapi_client.models.section_type.SectionType(
                                            id = 56, 
                                            name = '', 
                                            code = '', 
                                            description = '', ), )
                                    ], 
                                name = '', 
                                description = '', 
                                code = '', 
                                required = True, 
                                schema = null, 
                                value_type = null, 
                                category = null, 
                                unit = '', 
                                hint = '', 
                                examination_types = [
                                    openapi_client.models.examination_type.ExaminationType(
                                        id = 56, 
                                        name = '', 
                                        parent = '', 
                                        description = '', 
                                        code = '', )
                                    ], )
                            ], 
                        hazard_ids = [
                            56
                            ], 
                        organization = 56, 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                branch = openapi_client.models.branch.Branch(
                    id = 56, 
                    name = '', 
                    description = '', 
                    address = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    organization = 56, ),
                title = '',
                employment_date_from = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                person = 56,
        )
        """

    def testEmploymentHistory(self):
        """Test EmploymentHistory"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
